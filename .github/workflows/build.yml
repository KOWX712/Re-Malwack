name: build

on:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  pull_request:
    branches:
      - main
    paths:
      - '.github/workflows/build.yml'
      - 'module/**'
      - 'update.json'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set variables
        id: setup
        run: |
          COMMIT_NUM=$(git rev-list --count HEAD)
          COMMIT_HASH=$(git rev-parse --short HEAD)
          VERSION=$(jq -r .version update.json)
          ZIP_NAME=Re-Malwack_$VERSION-$COMMIT_NUM-$COMMIT_HASH.zip
          ZIP_PATH="./$ZIP_NAME"

          echo "ZIP_NAME=$ZIP_NAME" >> $GITHUB_ENV
          echo "ZIP_PATH=$ZIP_PATH" >> $GITHUB_ENV

      - name: Create Zip
        run: |
          zip -r "$ZIP_PATH" module/

      - name: Check Commit Info
        id: check_commit
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          if echo "$COMMIT_MSG" | grep -qiE "release|version"; then
            echo "SKIP=true" >> $GITHUB_ENV
          else
            echo "SKIP=false" >> $GITHUB_ENV
          fi

      - name: Send Release
        if: env.SKIP == 'false'
        env:
          BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        run: |
          if [ -f "$ZIP_PATH" ]; then
            curl -F chat_id="-1002271023118" \
                 -F message_thread_id="1314" \
                 -F document=@"$ZIP_PATH" \
                 -F caption="⚙️ *New test release!*
          Commit: \`${{ github.event.head_commit.message }}\`
          [View Commit](${{ github.event.head_commit.url }})
            " -F parse_mode="Markdown" \
            "https://api.telegram.org/bot$BOT_TOKEN/sendDocument"
          else
            echo "❌ zip file not found: $ZIP_PATH"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ZIP_NAME }}
          path: ${{ env.ZIP_PATH }}