name: Update Hosts

on:
  schedule:
    - cron: "0 0 * * *"  # Runs every 24 hours at midnight UTC
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-hosts:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up dependencies
        run: sudo apt update && sudo apt install -y curl

      - name: Download Hosts Files
        run: |
          mkdir -p hosts
          sources=(
            "https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
            "https://raw.githubusercontent.com/hagezi/dns-blocklists/main/hosts/pro.plus.txt"
            "https://o0.pages.dev/Pro/hosts.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardDNS.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileAds.txt"
            "https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileSpyware.txt"
          )
          for url in "${sources[@]}"; do
            curl -sL "$url" >> hosts/raw_hosts.txt
            echo "" >> hosts/raw_hosts.txt  # Ensure newline separation
          done

      - name: Download Whitelist
        run: |
            curl -sL "https://raw.githubusercontent.com/ZG089/Re-Malwack/main/whitelist.txt" -o hosts/whitelist.txt
  
      - name: Clean and Merge Hosts
        run: |
            echo "Cleaning hosts..."
            sed '/^[[:space:]]*#/d; /^[[:space:]]*$/d; s/^[[:space:]]*//; s/\t/ /g; s/  */ /g' hosts/raw_hosts.txt > hosts/tmp_hosts.txt
            sort -u hosts/tmp_hosts.txt > hosts/hosts.txt
            rm -f hosts/tmp_hosts.txt  # Remove temp file
  
      - name: Remove Whitelisted Domains
        run: |
          echo "Filtering whitelist..."
          
          whitelist_file="hosts/whitelist.txt"
      
          if [ -s "$whitelist_file" ]; then
            # Make a backup before filtering
            cp hosts/hosts.txt hosts/hosts.bak
      
            # Ensure each whitelisted domain is properly removed
            while IFS= read -r domain; do
              # Escape special characters in domain for sed
              escaped_domain=$(printf '%s' "$domain" | sed 's/[]\/$*.^|[]/\\&/g')
              sed -i "/^0\.0\.0\.0 $escaped_domain$/d" hosts/hosts.txt
            done < "$whitelist_file"
      
            # If the file is empty after filtering, restore the backup
            if [ ! -s hosts/hosts.txt ]; then
              echo "WARNING: Whitelist filtering removed everything! Restoring backup."
              mv hosts/hosts.bak hosts/hosts.txt
            fi
          else
            echo "Whitelist is empty or missing. Skipping..."
          fi


         
      - name: Setting up permissions for hosts file
        run: |
          chmod 644 hosts/hosts.txt  

      - name: Commit and Push Changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add hosts/hosts.txt
          git commit -m "Auto-update hosts file [$(date +'%Y-%m-%d')]" || exit 0
          git push
