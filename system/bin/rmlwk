#!/system/bin/sh

# Define functions
function malvack_banner() {
    clear
    echo -e "\033[0;31m                                      .--.                            "
    echo -e "\033[0;31m                                   .=*#=                              "
    echo -e "\033[0;31m                                 .+###+                               "
    echo -e "\033[0;31m                                .*#####-                              "
    echo -e "\033[0;31m                               .*##***-**=:                           "
    echo -e "\033[0;31m                             .*###-    .=*##+-.                       "
    echo -e "\033[0;31m                             .-+**        .-=*##+=:                   "
    echo -e "\033[0;31m                   .:.           ::           -*####+-.               "
    echo -e "\033[0;31m                   -*#*+:     -*##+.            .-+####+-.           "
    echo -e "\033[0;31m                     .:*#+***+#*:                  .-+###*           "
    echo -e "\033[0;31m                      :*#######*.                     .:-.           "
    echo -e "\033[0;31m                      +*********-                                     "
    echo -e "\033[0;31m              +#+.   .:::::  ::::    :*#:                             "
    echo -e "\033[0;31m               :+#+==#####* .####*==*#+:                              "
    echo -e "\033[0;31m                 .---##*-: :+####+---.                                "
    echo -e "\033[0;31m                     ##=  :#*+*##=                                    "
    echo -e "\033[0;31m                 .=++###**#+   *#*++-                                 "
    echo -e "\033[0;31m                =##=--####- .-=#*--+#*-                               "
    echo -e "\033[0;31m               =*=.   .+#+ -##*=.   .+*:                              "
    echo -e "\033[0;31m                        .. :-:                                        "
    echo -e "\033[0;37m        ╔────────────────────────────────────────╗"
    echo -e "\033[0;37m        │░█▀▄░█▀▀░░░░░█▄█░█▀█░█░░░█░█░█▀█░█▀▀░█░█│"
    echo -e "\033[0;37m        │░█▀▄░█▀▀░▄▄▄░█░█░█▀█░█░░░█▄█░█▀█░█░░░█▀▄│"
    echo -e "\033[0;37m        │░▀░▀░▀▀▀░░░░░▀░▀░▀░▀░▀▀▀░▀░▀░▀░▀░▀▀▀░▀░▀│"
    echo -e "\033[0;37m        ╚────────────────────────────────────────╝\033[0m"
}

function install_hosts() {
        # Merging hosts with removing commented lines and whitespaces, along with removing duplicated entries
        cat "${downloaded_hosts[@]}" "$hosts_file" | grep -vE '^[[:space:]]*#' | grep -vE '^[[:space:]]*$' | sort | uniq > "$hosts_file"
        # Delete downloaded hosts files after merging
        for file in "${downloaded_hosts[@]}"; do
            [ -f "$file" ] && rm -f "$file"
        done
}

function tolower() {
    echo "$1" | tr '[:upper:]' '[:lower:]'
}

function abort() {
    echo "- $1"
    sleep 0.5
    exit 1
}

function nuke_if_we_dont_have_internet() {
    ping -w 1 google.com >/dev/null 2>&1
    return $?
}

function ask() {
    local question="$1"
    local answer
    printf "- $question (y/n): "
    read -r answer
    if [[ "$(tolower "$answer")" == "y" ]]; then
        return 0
    else
        return 1
    fi
}

# Fallback to busybox wget if curl binary is not available
fetch() {
    PATH=/data/adb/ap/bin:/data/adb/ksu/bin:/data/adb/magisk:/data/data/com.termux/files/usr/bin:$PATH
    if command -v curl >/dev/null 2>&1; then
        curl -o "$@" || abort "Failed to download hosts file."
    else
        busybox wget --no-check-certificate -O - "$@" || abort "Failed to download hosts file."
    fi
}

# Variables
domain="$2"
temp=$(mktemp)
hosts_file="/data/adb/modules/Re-Malwack/system/etc/hosts"
MODDIR="/data/adb/modules/Re-Malwack"

# Banner
malvack_banner

# Check Root
if [ "$(id -u)" -ne 0 ]; then
    abort "Root is required to run this script."
fi

# Check Internet Connection
if ! nuke_if_we_dont_have_internet; then
    abort "Internet connection is required to proceed. Please check your connection."
fi

# Main Logic
case "$(tolower "$1")" in
    --reset)
        echo "- Reverting the changes..."
        echo "127.0.0.1 localhost\n::1 localhost" > "$hosts_file"
        chmod 644 "$hosts_file"
        string="description=Status: Protection is disabled due to reset ❌"
        sed -i "s/^description=.*/$string/g" $MODDIR/module.prop
        echo "- Successfully reverted changes."
        ;;
    --block-gambling|--block-fakenews)
        block_type=${1#--block-}
        echo "- Downloading entries for ${block_type}."
        sleep 0.5
        fetch /data/local/tmp/hosts https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/${block_type}-only/hosts &>/dev/null
        echo "- Applying entries..."
        cat /data/local/tmp/hosts "$hosts_file" | grep -vE '^[[:space:]]*#' | grep -vE '^[[:space:]]*$' | sort | uniq > "$hosts_file"
        rm /data/local/tmp/hosts
        echo "- Entries for blocking ${block_type} sites are added successfully."
        ;;
    --block-porn)
        block_type=${1#--block-}
        echo "- Downloading entries for porn block"
        sleep 0.5
        fetch /data/local/tmp/hosts1 https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/${block_type}-only/hosts &>/dev/null
        fetch /data/local/tmp/hosts2 https://raw.githubusercontent.com/johnlouie09/Anti-Porn-HOSTS-File/refs/heads/master/HOSTS.txt &>/dev/null
        fetch /data/local/tmp/hosts3 https://www.someonewhocares.org/hosts/hosts &>/dev/null
        echo "- Applying entries..."
        # Variables for downloaded files
        downloaded_hosts=(
        /data/local/tmp/hosts1
        /data/local/tmp/hosts2
        /data/local/tmp/hosts3
        )
        # Merge downloaded hosts files into the main hosts file
        install_hosts
        echo "- Entries for blocking porn sites are added successfully."
        ;;
    --whitelist)
        [[ -z "$domain" ]] && abort "Please provide a domain to whitelist."
        sed "/0\.0\.0\.0 $domain/d" "$hosts_file" > "$temp" && cp -f "$temp" "$hosts_file" || abort "Failed to whitelist $domain ."
        echo "- Whitelisted $domain."
        ;;
    --blacklist)
        [[ -z "$domain" ]] && abort "Please provide a domain to blacklist."
        echo "0.0.0.0 $domain" >> "$hosts_file"
        echo "- Blacklisted $domain."
        ;;
    --update-hosts)
        echo "- Downloading updates, Please wait."
        sleep 0.5
        fetch /data/local/tmp/hosts1 https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts &>/dev/null
        fetch /data/local/tmp/hosts2 https://raw.githubusercontent.com/hagezi/dns-blocklists/main/hosts/pro.plus-compressed.txt &>/dev/null 
        fetch /data/local/tmp/hosts3 https://hblock.molinero.dev/hosts &>/dev/null
        fetch /data/local/tmp/hosts4 https://raw.githubusercontent.com/r-a-y/mobile-hosts/master/AdguardDNS.txt &>/dev/null
        fetch /data/local/tmp/hosts5 https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileAds.txt &>/dev/null
        fetch /data/local/tmp/hosts6 https://raw.githubusercontent.com/r-a-y/mobile-hosts/refs/heads/master/AdguardMobileSpyware.txt &>/dev/null
        echo "- Applying update."
        # Variables for downloaded files
        downloaded_hosts=(
        /data/local/tmp/hosts1
        /data/local/tmp/hosts2
        /data/local/tmp/hosts3
        /data/local/tmp/hosts4
        /data/local/tmp/hosts5
        /data/local/tmp/hosts6
        )
        # Merge downloaded hosts files into the main hosts file
        install_hosts
        string="description=Status: Protection is enabled ✅ | protection update date: $(date)"
        sed -i "s/^description=.*/$string/g" $MODDIR/module.prop
        echo "- Done."
        ;;
    --help|-h|*)
        echo ""
        echo "Usage: su -c rmlwk [--argument]"
        echo "--reset: Restore original hosts file."
        echo "--block-porn: Block pornographic sites."
        echo "--block-gambling: Block gambling sites."
        echo "--block-fakenews: Block fake news sites."
        echo "--whitelist <domain>: Whitelist a domain."
        echo "--blacklist <domain>: Blacklist a domain."
        echo "--update-hosts: Update the hosts file."
        echo "--help, -h: Display help."
        echo -e "\033[0;31m Example command: su -c rmlwk --update-hosts"
        ;;
esac