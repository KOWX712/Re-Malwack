#!/system/bin/sh

# Define the path to the hosts file
hosts_file="/etc/hosts"
temp="/etc/hosts.tmp/hosts"

if [ $# -eq 0 ]; then
    echo "Usage: re-malwack [ --reset | --blockporn | --whitelist <domain> | --blacklist <domain>| --update-hosts | --help]"
    echo "--update-hosts: Updates the hosts file."
    echo "--reset: Restore the hosts file to its original state. (Disable ads blocking)"
    echo "--blockporn: Block pornographic websites by adding entries to the hosts file."
    echo "--blacklist <domain>: Adds domain to the hosts file to be blocked"
    echo "--whitelist <domain>: Remove the specified domain from the hosts file."
    echo "--help: Display this help message."
else
    case "$1" in
        --reset)

            chmod 644 "$hosts_file"
            echo "Restored permissions for $hosts_file"

            # Reset Hosts file
            echo "127.0.0.1 localhost" > "$hosts_file"
            echo "::1 localhost" >> "$hosts_file"

            # Restore the original permissions
            chmod 644 "$hosts_file"
            echo "Restored permissions for $hosts_file"

            # Notify completion
            echo "Restored $hosts_file to its original state"
            ;;
        --blockporn)
            host="https://raw.githubusercontent.com/StevenBlack/hosts/master/alternates/porn-only/hosts"

            # Download the hosts file with curl renaming it to hosts
            if su -c /data/data/com.termux/files/usr/bin/curl -o hosts "$host"; then

                # Check if the hosts file exists
                if [ -f "hosts" ]; then
                    # Append the downloaded hosts to the current hosts file
                    cat hosts >> "$hosts_file"

                    # Remove the downloaded hosts file
                    rm hosts

                    # Echo that the entry has been added
                    echo "Entry for $host added to $hosts_file"
                else
                    echo "Error: Downloaded file hosts does not exist."
                fi
            else
                echo "Error: Failed to download the hosts file."
            fi
            ;;
        --whitelist)
            # Check if the second argument (the domain) is provided
            if [ -z "$2" ]; then
                echo "Error: Please provide a domain to whitelist."
            else
                domain="$2"
                temp=$(mktemp)  # Create a temporary file
                if su -c /data/data/com.termux/files/usr/bin/sed "/0\.0\.0\.0 $domain/d" "$hosts_file" > "$temp"; then
                    if su -c /data/data/com.termux/files/usr/bin/mv "$temp" "$hosts_file"; then
                        echo "Whitelisted $domain in $hosts_file"
                    else
                        echo "Error: Failed to replace $hosts_file with the modified content."
                    fi
                else
                    echo "Error: Failed to remove $domain from $hosts_file."
                fi
                echo "Done"
            fi
            ;;
        --blacklist)
        if [ -z "$2" ]; then
                echo "Error: Please provide a domain to be added in the blacklist."
        else
            domain="$2"
            echo "0.0.0.0 $2" >> /etc/hosts
            echo "Done added your domain to the blacklist"
        fi
        ;;    
        --update-hosts)
            host="https://hosts.ubuntu101.co.za/hosts"

            # Set perms
            chmod 644 "$hosts_file"
            # Go to internal storage 
            cd /sdcard
            # Download the hosts file with curl renaming it to hosts
            su -c /data/data/com.termux/files/usr/bin/curl -o hosts "$host";
            clear
            echo "The new hosts file is downloaded successfully ✓"
            # Check if the file was downloaded successfully and exists
            if [ -f "hosts" ]; then
            # A mechanism to apply the new hosts file, takes advantage of files mirroring made by magisk and kernelSU.
                if [ -f "$hosts_file" ]; then
                    mv /sdcard/hosts /data/adb/modules/Re-Malwack/system/etc
                    echo ""
                    echo "Done ✓"
                fi
            else
                    echo "Error: Downloaded file hosts does not exist."
            fi
                exit 1
        ;;
        --help)
            echo "Usage: re-malwack [ --reset | --blockporn | --update-hosts |--blacklist <domain> | --whitelist <domain> | --help ]"
            echo "--update-hosts: Updates the hosts file."
            echo "--reset: Restore the hosts file to its original state. (Disable ads blocking)"
            echo "--blockporn: Block pornographic websites by adding entries to the hosts file."
            echo "--blacklist <domain>: Add a website to the hosts file to be blocked"
            echo "--whitelist <domain>: Remove the specified domain from the hosts file."
            echo "--help: Display this help message."
            ;;
        *)
            echo "Invalid option. Use 're-malwack --help' for usage information."
            ;;
    esac
fi
